% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get-state.R, R/state.R
\name{get_macroareas.state}
\alias{get_macroareas.state}
\alias{get_macroregions.state}
\alias{get_regions.state}
\alias{get_all_region.state}
\alias{get_state.state}
\alias{get_centers.state}
\alias{get_p_accept.state}
\alias{get_offered.state}
\alias{get_time.state}
\alias{state}
\alias{print.state}
\title{Constructor for object of class \code{state}}
\usage{
\method{get_macroareas}{state}(x, ...)

\method{get_macroregions}{state}(x, ...)

\method{get_regions}{state}(x, ...)

\method{get_all_region}{state}(x, ...)

\method{get_state}{state}(x, ...)

\method{get_centers}{state}(x, ...)

\method{get_p_accept}{state}(x, ...)

\method{get_offered}{state}(x, ...)

\method{get_time}{state}(x, ...)

state(name, macroareas)

\method{print}{state}(x, ...)
}
\arguments{
\item{x}{an object used to select a method.}

\item{...}{further arguments passed to or from other methods.}

\item{name}{[chr] the name of the state}

\item{macroareas}{[lst] a list of objects of class
\code{\link{macroarea}}, passed by
\code{\link{set_macroareas}()}. Note: all the macroarea in a
state must be of the same state (obviously).}
}
\value{
An object of class \code{\link{state}}.
}
\description{
The function \code{\link{state}()} is the constructor function for the homonymous
class.
}
\section{Methods (by generic)}{
\itemize{
\item \code{get_macroareas}: wrapper function to access to the 'macroareas' detail.

\item \code{get_macroregions}: wrapper function to access to all the macroreagions in
a state

\item \code{get_regions}: wrapper function to access to all the reagions in
state

\item \code{get_all_region}: wrapper function to access to the all the
names of reagions appear in the `set_macroregion`,
recursively.

\item \code{get_state}: wrapper function to access to the name of the
state

\item \code{get_centers}: wrapper function to access to all the centers of
a state

\item \code{get_p_accept}: compute the probability that at least one center
in any region of the state accept an offered organ.

\item \code{get_offered}: wrapper function to access to the detail
"offered".

\item \code{get_time}: wrapper function to access to the detail
"current_time".

\item \code{print}: nice (and coloured, if supported) print method.
}}

\examples{
pavia     <- center('Pavia',   'Lombardia', offered = 5, p_accept = 0.6)
bergamo   <- center('Bergamo', 'Lombardia', 8)
milano    <- center('Milano',  'Lombardia', 10, 0.8)
lombardia <- region(set_centers(pavia, bergamo, milano), default_p = 0.7)

padova <- center('Padova', 'Veneto', 8, 0.7)
veneto <- region(set_centers(padova))

nitp <- macroregion('NITp', regions = set_regions(lombardia, veneto),
                    initial_strip = c('lombardia', 'lombardia', 'veneto')
)

torino   <- center('Torino', 'Piemonte', 7, 0.6)
piemonte <- region(set_centers(torino))

nord <- macroarea('Macroarea Nord',
                  macroregions = set_macroregions(piemonte, nitp)
)

roma  <- center('Roma', 'Lazio', 10, 0.9)
lazio <- region(set_centers(roma))
sud   <- macroarea('Macroarea Sud', macroregions = set_macroregions(lazio))

italy <- state('Italy', set_macroareas(nord, sud))
get_macroareas(italy)
get_macroregions(italy)
get_regions(italy)
get_all_region(italy)
get_state(italy) # "italy"
get_centers(italy)
get_p_accept(italy)
get_offered(italy)
get_time(italy)
pavia   <- center('Pavia',   'Lombardia', offered = 5, p_accept = 0.6)
pavia

bergamo <- center('Bergamo', 'Lombardia', 8)
milano  <- center('Milano',  'Lombardia', 10, 0.8)

lombardia <- region(set_centers(pavia, bergamo, milano), default_p = 0.7)
lombardia

padova <- center('Padova', 'Veneto', 8, 0.7)
veneto <- region(set_centers(padova))

nitp <- macroregion('NITp', regions = set_regions(lombardia, veneto),
  initial_strip = c('lombardia', 'lombardia', 'veneto')
)
nitp

torino   <- center('Torino', 'Piemonte', 7, 0.6)
piemonte <- region(set_centers(torino))

nord <- macroarea('Macroarea Nord',
  macroregions = set_macroregions(piemonte, nitp)
)
nord

roma   <- center('Roma', 'Lazio', 10, 0.9)
lazio  <- region(set_centers(roma))

sud <- macroarea('Macroarea Sud',
  macroregions = set_macroregions(lazio)
)
sud

italy <- state('Italy',
  macroareas = set_macroareas(nord, sud)
)
italy
}
